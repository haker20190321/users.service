openapi: 3.0.0
info:
  version: 1.0.0
  title: Clients service
servers:
  - url: https://localhost:{port}
    description: Development server
    variables:
      port:
        enum:
          - '8085'
          - '443'
        default: '8085'
paths:
  /users/{userId}:
    get:
      description: Get user by id
      operationId: getUserById
      x-router-controller: userController
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                type: Object
                $ref: '#/components/schemas/User'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: Object
                $ref: '#/components/responses/NotFound'
    put:
      description: Update user
      operationId: updateUser
      x-router-controller: userController
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: User data
        required: true
        x-name: userData
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: Object
                $ref: '#/components/schemas/User'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: Object
                $ref: '#/components/responses/NotFound'
    delete:
      description: Delete user
      operationId: deleteUserById
      x-router-controller: userController
      parameters:
        - name: userId
          in: path
          description: User id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                type: bolean
                required: true
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: Object
                $ref: '#/components/responses/NotFound'
  /users:
    post:
      description: Create user
      operationId: createUser
      x-router-controller: userController
      requestBody:
        description: User data
        required: true
        x-name: userData
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: Object
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
      required:
        - id
        - name
    GeneralError:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      required:
        - code
        - message
  responses:
    NotFound:
      description: Entity not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
    IllegalInput:
      description: Illegal input for operation.
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
